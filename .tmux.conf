# INSTALL
# cp tmuxconf ~/.tmux.conf
#

set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"

set-option -g default-shell $SHELL

# if multiple clients are attached to the same window, maximize it to the
# bigger one
set-window-option -g aggressive-resize

# Start windows and pane numbering with index 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# word separators for automatic word selection
setw -g word-separators ' @"=()[]-:,.'
setw -ag word-separators "'"

# Show times longer than supposed
set -g display-panes-time 2000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# {n}vim compability
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ',xterm-256color:RGB:sitm=\E[3m,*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
set -g set-clipboard on
# Split horiziontal and vertical splits, instead of % and ". We also open them
# in the same directory.  Because we use widescreens nowadays, opening a
# vertical split that takes half of the screen is not worth. For vertical we
# only open 100 lines width, for horizontal it's 20 columns.
bind-key s split-window -v -l 30 -c '#{pane_current_path}'
bind-key v split-window -h -l 100 -c '#{pane_current_path}'

# Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly
# right. No need to use the modifier (C-b).
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Source file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Update default binding of `Enter` and `Space to also use copy-pipe
unbind -T copy-mode-vi Enter
unbind -T copy-mode-vi Space

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# copy text with `y` in copy mode
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# copy text with mouse selection without pressing any key
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# Sync panes (Send input to all panes in the window). When enabled, pane
# borders become red as an indication.
bind C-s if -F '#{pane_synchronized}' \
                     'setw synchronize-panes off; \
                      setw pane-active-border-style fg=colour63,bg=default; \
                      setw pane-border-format       " #P "' \
                   'setw synchronize-panes on; \
                    setw pane-active-border-style fg=red; \
                    setw pane-border-format       " #P - Pane Synchronization ON "'

# Faster command sequence
set -s escape-time 0

# Have a very large history
set -g history-limit 100000

# Mouse mode on
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g mouse on
set -g @scroll-speed-num-lines-per-scroll 2

# Set title
set -g set-titles on
set -g set-titles-string "#T"

# Equally resize all panes
bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical


is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Select panes
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Resize panes
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 3'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 3'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 3'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 3'

bind-key -T copy-mode-vi M-h resize-pane -L 3
bind-key -T copy-mode-vi M-j resize-pane -D 3
bind-key -T copy-mode-vi M-k resize-pane -U 3
bind-key -T copy-mode-vi M-l resize-pane -R 3

# # Select panes
# bind-key -n C-S-H 'select-pane -L'
# bind-key -n C-S-J 'select-pane -D'
# bind-key -n C-S-K 'select-pane -U'
# bind-key -n C-S-L 'select-pane -R'
#
# # Resize panes
# bind-key -n M-H 'resize-pane -L 3'
# bind-key -n M-J 'resize-pane -D 3'
# bind-key -n M-K 'resize-pane -U 3'
# bind-key -n M-L 'resize-pane -R 3'

# Disable confirm before killing
bind-key x kill-pane


set-option -g status on
set-option -g status-interval 1
set-option -g status-justify centre
set-option -g status-keys vi
set-option -g status-position top
set-option -g status-style fg=colour136,bg=colour235
set-option -g status-left-length 20
set-option -g status-left-style default
set-option -g status-left "#[fg=red]#{prefix_highlight} #S #[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r)#[default]"
set-option -g status-right-length 140
set-option -g status-right-style default
set-option -g status-right "#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) "
if-shell 'uname | grep -q Darwin' {
    wg_lang="#(defaults read ~/Library/Preferences/com.apple.HIToolbox.plist AppleCurrentKeyboardLayoutInputSourceID | awk -F. '{print $4}')"
    set-option -ag status-right "#[fg=red,dim,bg=default]$wg_lang #(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') "
} {
    set-option -ag status-right "#[fg=red,dim,bg=default] #(uptime | cut -f 4-5 -d ' ' | cut -f 1 -d ',') "
}
set-option -ag status-right " #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d"
set-window-option -g window-status-style fg=colour244
set-window-option -g window-status-style bg=default
set-window-option -g window-status-format "#I #[underscore]#{?#{==:#{window_panes},1},,+}#[bold]#W#[nobold]:#{=|-24|…;s|$HOME|~|:pane_current_path}"
set-window-option -g window-status-current-style fg=red
set-window-option -g window-status-current-style bg=default
set-window-option -g window-status-current-format "#[bold,fg=red]#W#[nobold]:#{=|-24|…;s|$HOME|~|:pane_current_path}"

# List of plugins
# see this https://github.com/tmux-plugins/tpm to installation
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


